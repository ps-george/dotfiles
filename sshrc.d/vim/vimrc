syntax enable " enable syntax processing
set background=dark
colorscheme solarized
set term=screen-256color

set relativenumber " show line numbers
set number

" default indent settings
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab

filetype plugin indent on " load filetype specific indent files
autocmd FileType python setlocal sw=4 softtabstop=4 expandtab
autocmd FileType bash setlocal sw=2 softtabstop=2 expandtab
autocmd FileType bashrc setlocal sw=2 softtabstop=2 expandtab


set wildmenu " visual autocomplete for command menu
set showmatch " highlights matching brackets

set incsearch " search as characters are entered
" set hlsearch  " highlight matches

" move vertically by visual line
nnoremap j gj
nnoremap k gk

" allows cursor change in tmux mode
if exists('$TMUX')
    let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
    let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"
else
    let &t_SI = "\<Esc>]50;CursorShape=1\x7"
    let &t_EI = "\<Esc>]50;CursorShape=0\x7"
endif

" toggle background with <Leader>+bg
map <Leader>bg :let &background = ( &background == "dark"? "light" : "dark" )<CR>
" swap p and P. by default p pastes after cursor, P pastes before. Would like
" p to paste before cursor and P after (seems more conventional)
noremap p gp
noremap P gP
noremap gp p
noremap gP P

" check whether clipboard exists using `:echo has('clipboard')`, if not
" install vim-gtk or vim-gnome
" copy and paste
vmap <C-c> "+y<ESC>
vmap <C-x> "+c
vmap <C-v> c<ESC>"+p
imap <C-v> <ESC>"+p
